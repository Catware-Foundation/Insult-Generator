
#
# Catware Insult Generator
#
# –ü—Ä–æ—Å—å–±–∞: –Ω–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Å–ª–∞–±–æ–Ω–µ—Ä–≤–Ω—ã—Ö –±—ã–∫–∞—Ö
#

from random import choice, randint
import markovify

insults = "–±—ã–∫,–º–µ—Ñ–µ–¥—Ä–æ–Ω,—Å–Ω—é—Å,–≤–æ—Ä–æ–Ω,–º—É—Å–æ—Ä,–ø–æ–Ω–æ—Å,–ø–æ–º–æ–π,–∫–∞—Ä–∞—Å—å,—Ö—É–π,—Ç–∞—Ä–∞–∫–∞–Ω,—É—Ä–æ–¥,—à–ø–æ—Ä–∫,–±–∞–∫–ª–∞–∂–∞–Ω,–æ–≤–æ—â,—Ñ—Ä—É–∫—Ç,—Å–∞—Ö–∞—Ä–æ–∫,–±–∞—Ä—Å–∏–∫,–ø—É–ø—Å,–Ω–µ–æ—Å–∞—Ä—Ç,–ª–∏–Ω—É–∫—Å–æ–∏–¥,–≤–∏–Ω–¥—É–∑—è—Ç–Ω–∏–∫,–º–∞–∫–æ–≤–æ–¥,—Ç—É–∞–ª–µ—Ç,—Ç–æ–ª–∫–∞–Ω,—Ç–æ–ª—á–æ–∫,–ø–µ–ø–µ–ª,–∫—Ä–∞–±,–º–∞–∫–∏–Ω—Ç–æ—à,–¥–µ–ª—å—Ñ–∏–Ω,—Ç—Ä—é—Ñ–µ–ª—å,–±—Å–¥—à–Ω–∏–∫,—Ü—ã–≥–∞–Ω,—á–º–æ,–ø–∏–¥–æ—Ä,–∑–∞–¥—Ä–æ—Ç,–∫–∏—Å–µ–ª—å,–±–æ—Ç–∞–Ω,–≥–∞–Ω–¥–æ–Ω–µ–æ,–ø—É—à–æ–∫,–∑–µ—Ñ–∏—Ä,–Ω–µ–≥–∞—Ç–∏–≤—á–∏–∫,–±—ã–¥–ª–∞–Ω,—Ç—Ä–µ—Ç—å–µ–∫–ª–∞—Å—Å–Ω–∏–∫,–≥–∞–∑,–µ–±–ª–∞–Ω,—É—ë–±–æ–∫,–ø–∏–¥–æ—Ä–∞—Å,–≥–∞–Ω–¥–æ–Ω,–ø–µ–¥–∏–∫,–ø—Ä–µ–∑–∏–∫,–≤–æ–ª–æ—Å,–Ω–µ–≥—Ä,—É–±—É–Ω—Ç–æ–≤–æ–¥,–∞—Ä—á–µ–≥–æ–º–æ—Å–µ–∫,—à–æ–∫–æ–ª–∞–¥,–∫–æ–∑—ë–ª,–±—ã—á–∞—Ä–∞,–∫–æ–∑–ª–∏—â–µ,–∫–æ–∑—ë–Ω,–æ–±–∞–º–∞,–Ω–∞–≤–∞–ª—å–Ω—ë–Ω–æ–∫,–≥–æ–≤–Ω–æ–µ–¥,—Ç—Ä–∞–º–ø,–≥–µ–π,–≥–æ–º–æ—Å–µ–∫,—Å–≤–∏–Ω,–∫–æ–±–µ–ª—å,—Ö–æ—Ö–æ–ª,—Å–∞—Ç–∞–Ω–∞".split(",")
adjectives = "–µ–±–∞–Ω—ã–π,–æ–±–æ—Å—Å–∞–Ω—ã–π,–ø–æ–¥–Ω–∞–¥—É—Å—ë—Ä–æ–≤—ã–π,—Å–ª–∞–±–æ–Ω–µ—Ä–≤–Ω—ã–π,–∂–∏—Ä–Ω—ã–π,–≤–æ–Ω—é—á–∏–π,–∫–∞—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π,–µ–±—É—á–∏–π,–Ω–µ–≤–º–µ–Ω—è–µ–º—ã–π,–±–ª—è–¥—Å–∫–∏–π,—á–µ—Ä–Ω–æ–º–∞–∑—ã–π,–æ—Ç—Ç—Ä–∞—Ö–∞–Ω–Ω—ã–π,–æ–±–¥—Ä–æ—á–µ–Ω–Ω—ã–π".split(",")
geninsult_first = "–±–ª—è–¥–æ,—á–ª–µ–Ω–æ,–≥–æ–≤–Ω–æ,—Ö—É–µ,–∂–µ–ª—Ç–æ,—á–µ—Ä–Ω–æ,–º–Ω–æ–≥–æ,–≤–µ—Ä—Ç–æ,–º–∞–ª–æ,—à–≤–∞–π–Ω–æ,–≥–ª–∏–Ω–æ,–≥–Ω–∏–¥–æ,–ø–∏—Å—å–∫–æ,—Å–æ–ø–ª–µ,–∫—Ä–∏–≤–æ,–ø–∏–¥–æ,–ø–µ—Ä–¥–æ,—Å—Ä–∞–ª–æ,—Å—Ä–∞–Ω–æ,–ø–æ—Ä–Ω–æ,–±–µ–∑".split(",")
geninsult_second = "—Ä—ã–ª—ã–π,–∂–æ–ø—ã–π,—Ä–æ—Ç—ã–π,–µ–±–ª–∏–≤—ã–π,—Å—Å—É—â–∏–π,—Å—Ä—É—â–∏–π,—É—Ö–∏–π,–∫–ª—é–≤—ã–π,–∑—É–±—ã–π,—Ö–≤–æ—Å—Ç—ã–π,–±–ª—è".split(",")
geninsult_endings = "–ª—ë—Ç,–µ–¥,–±–ª—é–π,—Ä–æ—Ç,—á–ª–µ–Ω,–º–µ—Å,–ø–∏–¥–æ—Ä,–ø–æ–µ–∑–¥,—Ç–∞–Ω–∫,–¥—Ä–æ—á,—Å–∫–æ—Ç—á,–∫—Ä–µ–π—Å–µ—Ä,–¥—Ä–æ—á–µ—Ä,–¥–æ—Ä–∞—Å".split(",")
abusives = "–±–ª—è—Ç—å,—Å—É–∫–∞,–µ–±–∞—Ç—å,–ø–∏–∑–¥–µ—Ü,–Ω–∞—Ö—É–π".split(",")
dick_adjectives = "—Ç—Ä–∞—Ö–æ,–µ–±–æ,—Å–µ–∫—Å–æ,–ø–æ—Ä–Ω–æ,–∫–æ–Ω—á–µ,–Ω–µ–≥—Ä–æ".split(",")
dicks = "—á–ª–µ–Ω,—à—Ç—ã—Ä—å,—à—Ç–µ–ø—Å–µ–ª—å,–∫–æ–ª,–±–∞–∫–ª–∞–∂–∞–Ω,—Ç—Ä–æ–Ω,–¥–∏–∫,—Å—Ç–≤–æ–ª,–∫—Ä—é—á–æ–∫,–ø–∏—Ç–æ–Ω,–ø–∞–π—Ç–æ–Ω,—à–ª–∞–Ω–≥,–∫–æ–ª".split(",")
demonstrative_verbs = "–∏–¥–∏,–ø–∏–∑–¥—É–π,—à—É—Ä—É–π,–≤–∞–ª–∏,–µ–±–∏—Å—å".split(",")
verbs = "–µ–±–∞–ª,–Ω–∞—Å–∏–ª–æ–≤–∞–ª,—Ç—Ä–∞—Ö–∞–ª,–ø–∏–∑–¥–∏–ª,–Ω–æ–∂–æ–º —Ä–µ–∑–∞–ª,–Ω–∞ —Ö—É—é –≤–µ—Ä—Ç–µ–ª,–Ω–∞ —Ö—É–µ –¥–æ 12000 –æ–±/—Å —Ä–∞–∑–≥–æ–Ω—è–ª,–æ–ø–ª–æ–¥–æ—Ç–≤–æ—Ä—è–ª".split(",")
relatives_impad = "–º–∞—Ç—å,–±–∞–±—É—à–∫—É,—Å–µ—Å—Ç—Ä—É,–±–∞–±–∫—É,–º–∞–º–∫—É,—Ç—ë—â—É,—Å–Ω–æ—Ö—É,–¥–æ—á—å,–¥–æ—á–∫—É".split(",")
places = "–Ω–∞—Ö—É–π,–≤ –ø–∏–∑–¥—É,–æ—Ç—Å—é–¥–∞,–∫ —Ö—É—è–º,–≤–æ–Ω —Ç—É–¥–∞,—Å–æ—Å–∞—Ç—å".split(",")
whose = "–º–∞–º–∫–∏–Ω,–ø–∞–ø–∫–∏–Ω,—Å–æ—Å–∞–ª–∫–∏–Ω,—à–∞–ª–∞–≤–∫–∏–Ω,–ø–ª—é—à–∫–∏–Ω".split(",")
fem_insults = "—à–∞–ª–∞–≤–∞,–º–∞–∫–∞–∫–∞,–æ–±–µ–∑—å—è–Ω–∞,—à–ª—é—Ö–∞,—Å–æ—Å–∞–ª–∫–∞,–¥—É—Ä–∞,–ø—Ä–æ—Å—Ç–∏—Ç—É—Ç–∫–∞,–ø–∏–∑–¥–∞,–º–∞—Ö–Ω–∞—Ç–∫–∞,–¥—ã—Ä–∫–∞,–¥—ã—Ä–∞,–≤–æ–Ω—é—á–∫–∞,–∫–æ–Ω—á–∞,–ø—ã–ª–∏–Ω–∫–∞,—Ö–æ—Ö–ª–∏–Ω–∫–∞,–∫–æ—Ä–æ–≤–∞,–±–∞–±–∫–∞,—É—Ä–æ–¥–∏–Ω–∞,—Ñ–∏–æ–Ω–∞,–ø–µ–ø–µ–ª—è—à–∫–∞,–∞–∫—É–ª–∞,–∫—É—Ä–∏—Ü–∞".split(",")
fem_adjectives = "–µ–±–∞–Ω–∞—è,–æ–±–æ—Å—Å–∞–Ω–∞—è,–ø–æ–¥–Ω–∞–¥—É—Å—ë—Ä–æ–≤–∞—è,—Å–ª–∞–±–æ–Ω–µ—Ä–≤–Ω–∞—è,–∂–∏—Ä–Ω–∞—è,–≤–æ–Ω—é—á–∞—è,–∫–∞—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è,–µ–±—É—á–∞—è,–Ω–µ–≤–º–µ–Ω—è–µ–º–∞—è,–±–ª—è–¥—Å–∫–∞—è,—á–µ—Ä–Ω–æ–º–∞–∑–∞—è,–æ—Ç—Ç—Ä–∞—Ö–∞–Ω–∞—è,–æ–±–¥—Ä–æ—á–µ–Ω–Ω–∞—è,–∫–æ–Ω—á–µ–Ω–∞—è".split(",")
item_adjectives_fem = "—à–∏—Ä–æ–∫–∞—è,–æ–≥—Ä–æ–º–Ω–∞—è,–º–µ–ª–∫–∞—è,–≤—ã–µ–±–∞–Ω–Ω–∞—è,–≥–∏–≥–∞–Ω—Ç—Å–∫–∞—è,–æ–±–¥–æ–ª–±–∞–Ω–Ω–∞—è".split(",")
smileys = list("üòÜü§£üò°ü§¨üòàüëøüë∫üëπü§°üñïüèªü§òüèªüòèüß†")

insult = "–û—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ –Ω–µ –ø—Ä–∏–¥—É–º–∞–ª"

def genlaugh():
        lg = ""
        parts = "–ê—Ö,–ê–•,–∞—Ö,–∞–•,–ê—ä,–ø—Ö,–ü—Ö,–ü–•,–ø–•,–∞–™,–ø–∑,".split(",")
        for x in range(randint(1, 20)):
                lg += choice(parts)
        return lg

def writeTo(text, target):
        file = open(target, "a", encoding="utf-8")
        file.write(text + "\n")
        file.close()

def genscob():
        sc = ""
        scobs = "),0,-,_".split(",")
        for x in range(randint(1, 20)):
                sc += choice(scobs)
        return sc

def genins():
        way = choice([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])
        if way == 1:
                insult = f"{choice(demonstrative_verbs)} {choice(places)}, {choice(insults)} {choice(adjectives)}"
        if way == 2:
                insult = f"{genlaugh()} {choice(abusives)} —Ç—ã {choice(insults)} {choice(whose)}{genscob()}"
        if way == 3:
                insult = f"–ø–æ—Å–æ—Å–∏ –º–æ–π {choice(dick_adjectives)}{choice(dicks)}, {choice(adjectives)} {choice(whose)}"
        if way == 4:
                insult = f"{choice(abusives)} —Ç—ã {choice(geninsult_first)}{choice(geninsult_second)}"
        if way == 5:
                insult = f"{choice(abusives)} —Ç—ã {choice(geninsult_first)}{choice(geninsult_endings)}"
        if way == 6:
                insult = f"{choice(demonstrative_verbs)} {choice(places)}, {choice(fem_insults)} {choice(fem_adjectives)}"
        if way == 7:
                insult = f"{genlaugh()} {choice(abusives)} —Ç—ã {choice(fem_insults)} {choice(whose)}{genscob()}"
        if way == 8:
                insult = f"{genlaugh()} {choice(abusives)} —É —Ç–µ–±—è {choice(fem_insults)} {choice(item_adjectives_fem)}"
        if way == 9:
                insult = f"{choice(abusives)} —Ç—ã {choice(geninsult_first)}{choice(geninsult_second)}"
        if way == 10:
                insult = f"{choice(abusives)} —Ç—ã {choice(geninsult_first)}{choice(geninsult_endings)}"
        if way == 11:
                insult = f"–¥–∞ —è —Ç–≤–æ—é {choice(relatives_impad)} {choice(verbs)}{genscob()} –ø–æ–Ω–∏–º–∞–µ—à—å???{genscob()}"
        if way == 12:
                insult = f"—è —Ç–µ–±–µ —â–∞—Å {choice(insults)} –≤ —Ä–æ—Ç –∑–∞—Å—É–Ω—É, {choice(insults)} —Ç—ã {choice(adjectives)}{genlaugh()}"
        insult = insult.upper()
        insult += choice(smileys) * randint(0, 5)
        if choice([True, False]):
                insult += f" {choice(demonstrative_verbs)} {choice(places)}".upper() + choice(smileys) * randint(0, 6)
                if choice([True, False]):
                        insult += f" {choice(insults)} {choice(adjectives)} {genlaugh()}".upper()
        return insult

print("–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ. –ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–µ–ø–æ–ª–Ω—è—é—â–µ–µ –Ω–µ–≥–∞—Ç–∏–≤–æ–º –≥–∞–≤–Ω–æ")

while True:
        input()
        print("================================================================================")
        a = genins()
        print(a)
